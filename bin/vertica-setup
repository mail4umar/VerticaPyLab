#!/bin/bash

# defaults
: ${VERTICA_PORT:=${VSQL_PORT:-5433}}
: ${SSHD_PORT:=5432}
: ${CONTAINER_NAME:=vertica-demo}
: ${DOCKER_IMAGE:=vertica/vertica-k8s:latest} # see https://hub.docker.com/r/vertica/vertica-k8s
: ${DBNAME:=demo} # default database name

# allow for enviornment variables to be
# specified in VERTICA_ENV_FORWARDING
for var in $VERTICA_ENV_FORWARD; do
  if [[ ${!var+isset} ]]; then
    VERTICA_ENV+=(-e "$var=${!var}")
  fi
done

# The OSx version of bash calls the M1 chip "arm64", but if someone updates
# /bin/bash, then it will could use "aarch64" in $MACHTYPE
if [[ $MACHTYPE =~ ^aarch64 ]] || [[ $MACHTYPE =~ ^arm64 ]] ; then
  # Arm based macs crash on a memory check unless this is added
  VERTICA_ENV+=(-e VERTICA_MEMDEBUG=2)
fi

docker container rm $CONTAINER_NAME # clear out old container in case it had issues
docker run --platform linux/amd64 --detach -p $VERTICA_PORT:5433 -p $SSHD_PORT:22 --name $CONTAINER_NAME $DOCKER_IMAGE || exit $?

# a temporary fix to prevent this command from preventing restarts of the docker container
docker exec -i "${VERTICA_ENV[@]}" $CONTAINER_NAME sed -i.bak 's/\(cp.*\)/\1 || true/' /opt/vertica/bin/docker-entrypoint.sh

# start the database
docker exec -i ${VERTICA_ENV[@]} $CONTAINER_NAME opt/vertica/bin/admintools -t create_db --database=$DBNAME --password= --hosts=localhost || exit $?
